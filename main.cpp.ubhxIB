#include "include.h"

int main(int argc, char * argv[])
{
    int session_cnt = (argc - 2) / 2;

    if (session_cnt == 0)
    {
        printf("argc is 4 \n");
        return -1;
    }
    char errbuf[PCAP_ERRBUF_SIZE];
    char * dev = argv[1];

    pcap_t* handle = pcap_open_live(dev, BUFSIZ, 1, 1000, errbuf);

    if (handle == nullptr)
    {
        fprintf(stderr, "couldn't open device %s: %s\n", dev, errbuf);
        return -1;
    }

    bool First_time = true;

    uint8_t ** Senders_MAC = (uint8_t **)malloc(sizeof(uint8_t *) * session_cnt);
    for(int i = 0; i < session_cnt; i++)
    {
        Senders_MAC[i] = (uint8_t *)malloc(sizeof(uint8_t) * 6);
    }


    for(int i = 1 ; i < session_cnt + 1; i++)   // Not use senders_mac[0] index
    {
        arp_infection(handle, dev, argv[2 * i], argv[(2 * i) + 1], Senders_MAC[i], First_time);
    }


    return 0;

}
